name: Test

on:
  push:
    branches:
      - 'master'
      - 'feature/**'
      - 'develop'
  # pull_request:
  #   branches:
  #     - 'master'
  #     - 'develop'
  #     - 'feature/**'

jobs:
  build:
    runs-on: ubuntu-24.04

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)
        id: nvm
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache: 'npm'
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}
      - name: Install OS dependencies
        run: |
          sudo apt install \
            -y --install-recommends \
              cmake gcc g++ gcc-avr simavr avr-libc \
              gcc-multilib g++-multilib clang
      - name: Print C/C++ compiler versions
        run: |
          clang --version
          clang++ --version
          gcc --version
          g++ --version
          avr-gcc --version
          avr-g++ --version
      - name: Install Node.js packages
        run: npm install
      - name: Build the project
        run: npm run build
      - name: Run tests
        run: npm run test
      - name: Send Slack message about test results
        run: node scripts/notify.js --notification-type test-finished
        env:
          TRIGGERING_ACTOR: '${{ github.triggering_actor }}'
          EVENT_PUSHER_NAME: '${{ github.event.pusher.name }}'
          EVENT_PUSHER_EMAIL: '${{ github.event.pusher.email }}'
          EVENT_HEAD_COMMIT_ID: '${{ github.event.head_commit.id }}'
          EVENT_HEAD_COMMIT_MESSAGE: '${{ github.event.head_commit.message }}'
          EVENT_HEAD_COMMIT_TIMESTAMP: '${{ github.event.head_commit.timestamp }}'
          EVENT_HEAD_COMMIT_URL: '${{ github.event.head_commit.url }}'
          EVENT_REF: '${{ github.event.ref }}'
          EVENT_AFTER_COMMIT: '${{ github.event.after }}'
          EVENT_BEFORE_COMMIT: '${{ github.event.before }}'
          EVENT_COMPARE_URL: '${{ github.event.compare }}'
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_SIGNING_SECRET: ${{ secrets.SLACK_SIGNING_SECRET }}
